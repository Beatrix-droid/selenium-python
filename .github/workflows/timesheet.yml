# use actionlint to debug yaml https://rhysd.github.io/actionlint/
name: automate_time_sheet
on: workflow_dispatch
  #schedule:
   # - cron:  '15 13 * * *'
jobs:
  automate_time_sheet:
    runs-on: ubuntu-latest
    environment: production
    name: open repo
    steps:
      - name: Check out this repo
        uses: actions/checkout@v3
        with:
            persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of the personal access token.
            fetch-depth: 0  # otherwise, there would be errors pushing refs to the destination repository.

      - name: Remove old logs and pngs
        run: |
          rm -f *.log
          rm -f *.png

      - name: configure git and remove old files
        run : |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .



      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.4

      - name: Installed package list
        run: apt list --installed

      - name: Remove default firefox
        run: sudo rm -fr /opt/firefox

      - name: Install firefox 100.0.2
        run: |
          echo "downloading firefox 100"
          wget "http://ftp.mozilla.org/pub/firefox/releases/100.0.2/linux-x86_64/en-US/firefox-100.0.2.tar.bz2"
          echo "extracting compressed file"
          sudo tar xjf firefox-*.tar.bz2
          echo "removing unneeded compressed file"
          sudo rm *.bz2
          echo "moving firefox"
          sudo mv firefox /opt
          echo "removing any existing firefox in /usr/bin"
          sudo rm /usr/bin/firefox
          echo "creating symbolic link"
          sudo ln -s /opt/firefox/firefox /usr/bin/firefox

      - name: Install all the dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: requirements.txt
          update-pip: "false"
          update-setuptools: "false"
          update-wheel: "false"

      - name: Run the automation script
        env:
           USERNAME: ${{ secrets.USERNAME }}
           PASSWORD: ${{ secrets.PASSWORD }}
        run: python main.py

      - name: commit changes
        run: |
          git add .
          git commit -m "adding new logs"
          git push origin master
        env:
          REPO_KEY: ${{secrets.GITHUB_TOKEN}}
          username: github-actions
